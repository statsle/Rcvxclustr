% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ADMM_RCC.R
\name{ADMM_RCC}
\alias{ADMM_RCC}
\title{Robust Convex Clustering using ADMM with tuning for \code{lambda}}
\usage{
ADMM_RCC(
  X,
  phi,
  method,
  lam.begin,
  lam.step,
  rho,
  tau,
  cl_true,
  randmode,
  max.log,
  max.iter_cvx,
  max.iter_Rcvx
)
}
\arguments{
\item{X}{The n-by-p data matrix whose rows are being clustered.}

\item{phi}{The parameter in the Gaussian kernel weights.}

\item{method}{The method to be used. 
Choices are \code{cvx_uni}, \code{cvx_GK}, \code{Rcvx_uni} and \code{Rcvx_GK}.}

\item{lam.begin}{The starting value of \code{lambda}.}

\item{lam.step}{The increment step of \code{lambda}. Each iteration will mutiply \code{lambda} by this step value.}

\item{rho}{Augmented Lagrangian penalty parameter.}

\item{tau}{The robustification parameter in huber loss.}

\item{cl_true}{The true clustering results. Used for rand index calculation.}

\item{randmode}{The rand index mode. See \code{adjustedRand} in package \code{clues} for details.}

\item{max.log}{The maximal number of iterations for \code{lambda}.}

\item{max.iter_cvx}{The maximal number of iterations for the cvxclustr method for each \code{lambda}.}

\item{max.iter_Rcvx}{The maximal number of iterations for the Rcvxclustr method for each \code{lambda}. 
The algorithm also stops when the present iteration gives out the result where all data points are classified in the same cluster.}
}
\value{
\code{method} The method used.

\code{lam} The best \code{lambda} value, which reaches the best rand index.

\code{rand} The rand index obtained using the best \code{lambda}.

\code{U_est} The estimated centroid matrix obtained using the best \code{lambda}.

\code{path} A matrix, of which each row represents the clustering result for each iteration.

\code{cl_est} The result of cluster estimation which produces the best rand index.
}
\description{
\code{ADMM_RCC} performs convex clustering using the ADMM algorithm over an increasing sequence of \code{lambda} with warm start. 
The starting value and increment step of \code{lambda} can be set. 
\itemize{
\item{n is the number of data observations}
\item{p is the number of features}
\item{nK is the number non-zero weights.}
}
}
